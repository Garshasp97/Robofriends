{"version":3,"sources":["Components/Card.js","Components/Cardlist.js","Components/Searchbox.js","Components/Scroll.js","Components/ErrorBoundry.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","Cardlist","robots","map","user","i","Searchbox","searchChange","searchfield","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","lenght","react","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2OAgBeA,EAbF,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,KAAKC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAEvB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACI,6BAAKF,IACL,4BAAIC,WCWLK,EAlBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACI,oCACIA,EAAOC,KAAI,SAACC,EAAKC,GACjB,OACA,cAAC,EAAD,CAAcR,GAAIK,EAAOG,GAAGR,GAAIF,KAAMO,EAAOG,GAAGV,KAAMC,MAAOM,EAAOG,GAAGT,OAA5DS,UCERC,EARG,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,aAAgC,EAAlBC,YAC/B,OACI,qBAAKV,UAAU,MAAf,SACA,uBAAOA,UAAW,mCAAmCW,KAAK,SAASC,YAAY,gBAAgBC,SAAUJ,OCKlGK,G,MARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,iBAAkBC,OAAO,SAAnE,SACKJ,EAAMK,aCeJC,E,kDAjBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHC,E,qDAMvB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG9B,WACQ,OAAIG,KAAKJ,MAAMC,SACJ,8EAEJG,KAAKX,MAAMK,a,GAfCQ,aCiDZC,E,kDA1CX,aAAe,IAAD,8BACV,gBAiBJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAEjB,YAAaqB,EAAMC,OAAOC,SAjB1C,EAAKX,MAAQ,CACVlB,OAAQ,GACRM,YAAa,IAJN,E,qDAQd,WAAqB,IAAD,OAChBwB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAAEvB,OAAQkC,S,oBAU3C,WACI,MAA+BZ,KAAKJ,MAA5BlB,EAAR,EAAQA,OAAOM,EAAf,EAAeA,YACT6B,EAAkBnC,EAAOoC,QAAO,SAAAC,GAClC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASjC,EAAYgC,kBAE1D,OAAOtC,EAAOwC,OACX,uDAEF,sBAAK5C,UAAU,KAAf,UACG,oBAAIA,UAAU,KAAd,wBACA,cAAC,EAAD,CAAWS,aAAciB,KAAKI,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAU1B,OAAQmC,e,GAnCfM,IAAMjB,WCITkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCKdO,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,SAMhDX,M","file":"static/js/main.310a75ce.chunk.js","sourcesContent":["import react from \"react\";\r\n \r\n\r\nconst Card = ({name,email, id}) => {\r\n     \r\n    return (\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='robots' src={`https://robohash.org/${id}?200x200`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import react from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst Cardlist = ( {robots} ) => {\r\n    return (\r\n        <div> {\r\n            robots.map((user,i) => {\r\n            return (\r\n            <Card key={i} id={robots[i].id} name={robots[i].name} email={robots[i].email}/>\r\n                  );\r\n            })\r\n        }\r\n         </div>\r\n    );\r\n}\r\n            \r\n        \r\n        \r\n    \r\n\r\n\r\nexport default Cardlist;","import react from \"react\";\r\n\r\nconst Searchbox = ( {searchChange, searchfield} ) => {\r\n    return (\r\n        <div className='pa2'>\r\n        <input className ='pa3 ba b--green bg-lightest-blue' type='search' placeholder='search robots' onChange={searchChange} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Searchbox;","import react from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll', border: '1px solidbalck', height:'700px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Scroll;","import react, { Component } from \"react\";\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\ncomponentDidCatch(error, info) {\r\n    this.setState({ hasError: true})\r\n}\r\n\r\nrender() {\r\n        if (this.state.hasError) {\r\n            return <h1>Oooops. Something went wrong, please reload.</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n  }\r\nexport default ErrorBoundry;","import react from \"react\";\r\nimport Cardlist from \"../Components/Cardlist\";\r\nimport Searchbox from '../Components/Searchbox';\r\nimport './App.css';\r\nimport Scroll from '../Components/Scroll';\r\nimport ErrorBoundry from \"../Components/ErrorBoundry\";\r\n\r\n\r\nclass App extends react.Component { \r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n           robots: [],\r\n           searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users') \r\n        .then(response => response.json())\r\n        .then(users => this.setState({ robots: users}))\r\n    }\r\n        \r\n        \r\n     \r\n\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value})\r\n    }\r\n    render() {\r\n        const { robots,searchfield } = this.state;\r\n        const filteredRobots =  robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n        })\r\n       return robots.lenght ?\r\n          <h1>Loading, please wait.</h1> :\r\n        (\r\n        <div className='tc'>\r\n           <h1 className=\"f1\">RoboFriend</h1>\r\n           <Searchbox searchChange={this.onSearchChange}/>\r\n           <Scroll>\r\n             <ErrorBoundry>\r\n               <Cardlist robots={filteredRobots}/>\r\n             </ErrorBoundry>\r\n           </Scroll>\r\n        </div>\r\n             );\r\n         }\r\n    }\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\n\nimport App from './Containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\n\n\nReactDOM.render(<App/>, document.getElementById('root'));\n \n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}